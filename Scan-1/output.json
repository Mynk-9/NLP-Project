[{'line': 'import java.io.InputStream;', 'block': []}, {'line': 'import java.io.IOException;', 'block': []}, {'line': 'import java.net.URL;', 'block': []}, {'line': 'import java.util.LinkedList;', 'block': []}, {'line': 'import java.util.List;', 'block': []}, {'line': 'import java.util.Properties;', 'block': []}, {'line': 'import java.util.StringTokenizer;', 'block': []}, {'line': 'class Configuration extends Properties', 'block': [{'line': 'private static String replace(String val, String from, String to)', 'block': [{'line': 'return from.equals(val) ? to : val;', 'block': []}]}, {'line': 'public Configuration(URL url)', 'block': [{'line': 'InputStream in = null;', 'block': []}, {'line': 'try', 'block': [{'line': 'load(in = url.openStream());', 'block': []}]}, {'line': 'catch (Exception e)', 'block': [{'line': 'throw new RuntimeException(\"Could not load configuration from \" + url, e);', 'block': []}]}, {'line': 'finally', 'block': [{'line': 'if (in !=   null)', 'block': [{'line': 'try', 'block': [{'line': 'in.close();', 'block': []}]}, {'line': 'catch (IOException ignore)', 'block': []}]}]}]}, {'line': 'public String getProperty(String key, String defaultValue, String replace, String to)', 'block': [{'line': 'return replace(getProperty(key, defaultValue), replace, to);', 'block': []}]}, {'line': 'public List tokenize(String s, List result)', 'block': [{'line': 'StringTokenizer stk = new StringTokenizer(s, \", \");', 'block': []}, {'line': 'while (stk.hasMoreTokens())', 'block': [{'line': 'String tk = stk.nextToken();', 'block': []}, {'line': 'if (tk.startsWith(\"$\"))', 'block': [{'line': 'tokenize(getProperty(tk.substring(1), \"\"), result);', 'block': []}]}, {'line': 'else', 'block': [{'line': 'result.add(tk);', 'block': []}]}]}, {'line': 'return result;', 'block': []}]}, {'line': 'public String[] tokenize(String s)', 'block': [{'line': 'if (s == null) return null;', 'block': []}, {'line': 'List l = tokenize(s, new LinkedList());', 'block': []}, {'line': 'return (String[]) l.toArray(new String[l.size()]);', 'block': []}]}]}]